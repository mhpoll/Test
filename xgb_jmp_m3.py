# Generated by XGBoost for JMP
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import xgboost_jmp as xgb_jmp

#%%
mname = 'xgb_jmp_m3'
path = 'C:\Users\Mitchell's Build 1\Desktop\BAN530\Shiny\'
data = 'zomato_small.csv'
yvar = {
   'rate' : 'reg:squarederror'
}
xvar = ['approx_cost.for.two.people.','online_order','book_table','votes','listed_in.type.','listed_in.city.','Cuisines_Categorical','Restaurant_type']
vvar = ['Validation']
wvar = []
fvar = []
cvar = {
   'online_order' : ['No','Yes'],
   'book_table' : ['No','Yes'],
   'listed_in.type.' : ['Buffet','Cafes','Delivery','Desserts','Dine-out','Drinks & nightlife','Pubs and bars'],
   'listed_in.city.' : ['Banashankari','Bannerghatta Road','Basavanagudi','Bellandur','Brigade Road','Brookefield','BTM','Church Street','Electronic City','Frazer Town','HSR','Indiranagar','Jayanagar','JP Nagar','Kalyan Nagar','Kammanahalli','Koramangala 4th Block','Koramangala 5th Block','Koramangala 6th Block','Koramangala 7th Block','Lavelle Road','Malleshwaram','Marathahalli','MG Road','New BEL Road','Old Airport Road','Rajajinagar','Residency Road','Sarjapur Road','Whitefield'],
   'Cuisines_Categorical' : ['American','Asian','Bar Food','BBQ','Dessert','European','Fast Food','Healthy Food','Indian','Mexican','Middle Eastern','Misc','Seafood'],
   'Restaurant_type' : ['Bakery','Bar','Beverage Shop','Cafe','Casual Dining','Club','Delivery','Dessert Parlor','Dhaba','Fine Dining','Food Court','Food Truck','Kiosk','Lounge','Mess','Microbrewery','Misc','Pub','Quick Bites','Sweet Shop','Takeaway'],
   'Validation' : [Training,Validation],
}
parms = {
   'max_depth' : 7,
   'subsample' : 0.838549824292266,
   'colsample_bytree' : 0.882685868230156,
   'min_child_weight' : 5.64982792282888,
   'alpha' : 1.95172133850005,
   'lambda' : 1.30836058256039,
   'learning_rate' : 0.295325959678198,
}
iter = 169

#%%
print('\n\nloading data')
df = pd.read_csv(path + data)
cats = list(cvar.keys())
df[cats] = df[cats].fillna('')
print(df.head(), df.shape)

#%%
print('\n\nfitting')
oof = xgb_jmp.fit(mname, path, df, yvar, xvar, wvar, vvar, cvar, parms, iter)
print(oof.head())
print(oof.shape)

#%%
print('\n\npredicting')
pred = xgb_jmp.predict(mname, path, df, yvar, xvar, vvar, cvar)
print(pred.head())
print(pred.shape)
ylist = list(yvar.keys())
sns.distplot(pred)
plt.title('Distribution of Predictions for ' + ylist[0] + ' ' + mname)
plt.show()
plt.gcf().clear()
print(pred.describe())
